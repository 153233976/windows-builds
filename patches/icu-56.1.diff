diff --git a/source/common/unicode/umachine.h b/source/common/unicode/umachine.h
index 939a117..a8998f3 100644
--- a/source/common/unicode/umachine.h
+++ b/source/common/unicode/umachine.h
@@ -93,7 +93,7 @@
 #    define U_ATTRIBUTE_DEPRECATED __attribute__ ((deprecated))
 /**
  * \def U_ATTRIBUTE_DEPRECATED
- * This is used for Visual C++ specific attributes 
+ * This is used for Visual C++ specific attributes
  * @internal
  */
 #elif defined(_MSC_VER) && (_MSC_VER >= 1400)
@@ -154,6 +154,21 @@
 /* limits for int32_t etc., like in POSIX inttypes.h                        */
 /*==========================================================================*/
 
+#if defined(_MSC_VER) && _MSC_VER >= 1900
+#undef INT8_MAX
+#undef INT8_MIN
+#undef INT16_MAX
+#undef INT16_MIN
+#undef INT32_MAX
+#undef INT32_MIN
+#undef UINT8_MAX
+#undef UINT8_MIN
+#undef UINT16_MAX
+#undef UINT16_MIN
+#undef UINT32_MAX
+#undef UINT32_MIN
+#endif
+
 #ifndef INT8_MIN
 /** The smallest value an 8 bit signed integer can hold @stable ICU 2.0 */
 #   define INT8_MIN        ((int8_t)(-128))
@@ -335,7 +350,7 @@ typedef int32_t UChar32;
  * This value is intended for sentinel values for APIs that
  * (take or) return single code points (UChar32).
  * It is outside of the Unicode code point range 0..0x10ffff.
- * 
+ *
  * For example, a "done" or "error" value in a new API
  * could be indicated with U_SENTINEL.
  *
diff --git a/source/io/ufile.c b/source/io/ufile.c
index ab9f70a..1693433 100644
--- a/source/io/ufile.c
+++ b/source/io/ufile.c
@@ -38,7 +38,7 @@
 #include "cstring.h"
 #include "cmemory.h"
 
-#if U_PLATFORM_USES_ONLY_WIN32_API && !defined(fileno)
+#if U_PLATFORM_USES_ONLY_WIN32_API && !defined(fileno) && _MSC_VER < 1900
 /* Windows likes to rename Unix-like functions */
 #define fileno _fileno
 #endif
diff --git a/source/layout/LETypes.h b/source/layout/LETypes.h
index de8910b..6c36683 100644
--- a/source/layout/LETypes.h
+++ b/source/layout/LETypes.h
@@ -299,13 +299,13 @@ typedef struct LEPoint LEPoint;
 #ifndef UINT32_MAX
 #define LE_UINT32_MAX 0xFFFFFFFFU
 #else
-#define LE_UINT32_MAX UINT32_MAX
+#define LE_UINT32_MAX 0xFFFFFFFFU
 #endif
 
 #ifndef UINTPTR_MAX
 #define LE_UINTPTR_MAX LE_UINT32_MAX
 #else
-#define LE_UINTPTR_MAX UINTPTR_MAX
+#define LE_UINTPTR_MAX LE_UINT32_MAX
 #endif
 
 /**
@@ -637,13 +637,13 @@ enum LEFeatureENUMs {
   LE_SS05_FEATURE_ENUM,  /**< Feature specific enum */
   LE_SS06_FEATURE_ENUM,  /**< Feature specific enum */
   LE_SS07_FEATURE_ENUM,   /**< Feature specific enum */
-  
+
   LE_CHAR_FILTER_FEATURE_ENUM = 31, /**< Apply CharSubstitutionFilter */
   LE_FEATURE_ENUM_MAX = LE_CHAR_FILTER_FEATURE_ENUM
 };
 
 
-/** 
+/**
  * Flags for typographic features.
  * @internal
  * @{
